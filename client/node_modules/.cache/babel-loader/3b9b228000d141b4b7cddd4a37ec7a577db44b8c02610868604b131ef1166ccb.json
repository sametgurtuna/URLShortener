{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samet\\\\Desktop\\\\linkshortener\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, updateProfile, auth } from '../config/firebase';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isPremium, setIsPremium] = useState(false);\n\n  // KullanÄ±cÄ± kayÄ±t\n  const signup = async (email, password, displayName) => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      await updateProfile(userCredential.user, {\n        displayName\n      });\n      toast.success('Account created successfully!');\n      return userCredential;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // KullanÄ±cÄ± giriÅŸ\n  const login = async (email, password) => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      toast.success('Logged in successfully!');\n      return userCredential;\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Ã‡Ä±kÄ±ÅŸ yap\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      toast.success('Logged out successfully!');\n    } catch (error) {\n      toast.error(error.message);\n      throw error;\n    }\n  };\n\n  // Premium durumu kontrol et (demo iÃ§in)\n  const checkPremiumStatus = user => {\n    // Demo iÃ§in: eÄŸer email'de \"premium\" geÃ§iyorsa premium\n    if (user && user.email && user.email.includes('premium')) {\n      setIsPremium(true);\n    } else {\n      setIsPremium(false);\n    }\n  };\n\n  // Premium satÄ±n al (demo)\n  const upgradeToPremium = () => {\n    setIsPremium(true);\n    toast.success('ðŸŽ‰ Upgraded to Premium!');\n    // GerÃ§ek uygulamada burada Ã¶deme iÅŸlemi olur\n  };\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(user => {\n      setCurrentUser(user);\n      checkPremiumStatus(user);\n      setLoading(false);\n    });\n    return unsubscribe;\n  }, []);\n  const value = {\n    currentUser,\n    signup,\n    login,\n    logout,\n    isPremium,\n    upgradeToPremium,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"6kbPoffbqfujuB4AJDAp/lhnPOI=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","updateProfile","auth","toast","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","currentUser","setCurrentUser","loading","setLoading","isPremium","setIsPremium","signup","email","password","displayName","userCredential","user","success","error","message","login","logout","checkPremiumStatus","includes","upgradeToPremium","unsubscribe","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/samet/Desktop/linkshortener/client/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { \r\n  createUserWithEmailAndPassword, \r\n  signInWithEmailAndPassword, \r\n  signOut, \r\n  onAuthStateChanged,\r\n  updateProfile,\r\n  auth\r\n} from '../config/firebase';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isPremium, setIsPremium] = useState(false);\r\n\r\n  // KullanÄ±cÄ± kayÄ±t\r\n  const signup = async (email, password, displayName) => {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n      await updateProfile(userCredential.user, { displayName });\r\n      toast.success('Account created successfully!');\r\n      return userCredential;\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // KullanÄ±cÄ± giriÅŸ\r\n  const login = async (email, password) => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n      toast.success('Logged in successfully!');\r\n      return userCredential;\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Ã‡Ä±kÄ±ÅŸ yap\r\n  const logout = async () => {\r\n    try {\r\n      await signOut(auth);\r\n      toast.success('Logged out successfully!');\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Premium durumu kontrol et (demo iÃ§in)\r\n  const checkPremiumStatus = (user) => {\r\n    // Demo iÃ§in: eÄŸer email'de \"premium\" geÃ§iyorsa premium\r\n    if (user && user.email && user.email.includes('premium')) {\r\n      setIsPremium(true);\r\n    } else {\r\n      setIsPremium(false);\r\n    }\r\n  };\r\n\r\n  // Premium satÄ±n al (demo)\r\n  const upgradeToPremium = () => {\r\n    setIsPremium(true);\r\n    toast.success('ðŸŽ‰ Upgraded to Premium!');\r\n    // GerÃ§ek uygulamada burada Ã¶deme iÅŸlemi olur\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      checkPremiumStatus(user);\r\n      setLoading(false);\r\n    });\r\n\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n  const value = {\r\n    currentUser,\r\n    signup,\r\n    login,\r\n    logout,\r\n    isPremium,\r\n    upgradeToPremium,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SACEC,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,EAClBC,aAAa,EACbC,IAAI,QACC,oBAAoB;AAC3B,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGb,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMc,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGf,UAAU,CAACY,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACuB,SAAS,EAAEC,YAAY,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;;EAEjD;EACA,MAAMyB,MAAM,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IACrD,IAAI;MACF,MAAMC,cAAc,GAAG,MAAM3B,8BAA8B,CAACK,IAAI,EAAEmB,KAAK,EAAEC,QAAQ,CAAC;MAClF,MAAMrB,aAAa,CAACuB,cAAc,CAACC,IAAI,EAAE;QAAEF;MAAY,CAAC,CAAC;MACzDpB,KAAK,CAACuB,OAAO,CAAC,+BAA+B,CAAC;MAC9C,OAAOF,cAAc;IACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdxB,KAAK,CAACwB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAC1B,MAAMD,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAME,KAAK,GAAG,MAAAA,CAAOR,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAME,cAAc,GAAG,MAAM1B,0BAA0B,CAACI,IAAI,EAAEmB,KAAK,EAAEC,QAAQ,CAAC;MAC9EnB,KAAK,CAACuB,OAAO,CAAC,yBAAyB,CAAC;MACxC,OAAOF,cAAc;IACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdxB,KAAK,CAACwB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAC1B,MAAMD,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACF,MAAM/B,OAAO,CAACG,IAAI,CAAC;MACnBC,KAAK,CAACuB,OAAO,CAAC,0BAA0B,CAAC;IAC3C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdxB,KAAK,CAACwB,KAAK,CAACA,KAAK,CAACC,OAAO,CAAC;MAC1B,MAAMD,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMI,kBAAkB,GAAIN,IAAI,IAAK;IACnC;IACA,IAAIA,IAAI,IAAIA,IAAI,CAACJ,KAAK,IAAII,IAAI,CAACJ,KAAK,CAACW,QAAQ,CAAC,SAAS,CAAC,EAAE;MACxDb,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;;EAED;EACA,MAAMc,gBAAgB,GAAGA,CAAA,KAAM;IAC7Bd,YAAY,CAAC,IAAI,CAAC;IAClBhB,KAAK,CAACuB,OAAO,CAAC,yBAAyB,CAAC;IACxC;EACF,CAAC;EAED9B,SAAS,CAAC,MAAM;IACd,MAAMsC,WAAW,GAAGlC,kBAAkB,CAAEyB,IAAI,IAAK;MAC/CV,cAAc,CAACU,IAAI,CAAC;MACpBM,kBAAkB,CAACN,IAAI,CAAC;MACxBR,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAOiB,WAAW;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG;IACZrB,WAAW;IACXM,MAAM;IACNS,KAAK;IACLC,MAAM;IACNZ,SAAS;IACTe,gBAAgB;IAChBjB;EACF,CAAC;EAED,oBACEX,OAAA,CAACC,WAAW,CAAC8B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC3B,GAAA,CAnFWF,YAAY;AAAA8B,EAAA,GAAZ9B,YAAY;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}