{"ast":null,"code":"// Demo mode için Firebase'siz authentication\n// Gerçek uygulamada buraya gerçek Firebase config gelecek\n\n// Demo auth objesi\nexport const auth = {\n  currentUser: null,\n  onAuthStateChanged: callback => {\n    // Demo için localStorage'dan user'ı oku\n    const demoUser = localStorage.getItem('demoUser');\n    if (demoUser) {\n      const user = JSON.parse(demoUser);\n      setTimeout(() => callback(user), 100);\n    } else {\n      setTimeout(() => callback(null), 100);\n    }\n    return () => {}; // unsubscribe function\n  }\n};\n\n// Demo database objesi\nexport const db = {\n  // Demo için boş obje\n};\n\n// Demo functions\nexport const createUserWithEmailAndPassword = async (auth, email, password) => {\n  const user = {\n    uid: `demo-${Date.now()}`,\n    email,\n    displayName: email.split('@')[0],\n    emailVerified: true\n  };\n  localStorage.setItem('demoUser', JSON.stringify(user));\n  return {\n    user\n  };\n};\nexport const signInWithEmailAndPassword = async (auth, email, password) => {\n  const user = {\n    uid: `demo-${Date.now()}`,\n    email,\n    displayName: email.split('@')[0],\n    emailVerified: true\n  };\n  localStorage.setItem('demoUser', JSON.stringify(user));\n  return {\n    user\n  };\n};\nexport const signOut = async auth => {\n  localStorage.removeItem('demoUser');\n  return Promise.resolve();\n};\nexport const updateProfile = async (user, profile) => {\n  const currentUser = JSON.parse(localStorage.getItem('demoUser') || '{}');\n  const updatedUser = {\n    ...currentUser,\n    ...profile\n  };\n  localStorage.setItem('demoUser', JSON.stringify(updatedUser));\n  return Promise.resolve();\n};\nexport const onAuthStateChanged = auth.onAuthStateChanged;\nexport default null;","map":{"version":3,"names":["auth","currentUser","onAuthStateChanged","callback","demoUser","localStorage","getItem","user","JSON","parse","setTimeout","db","createUserWithEmailAndPassword","email","password","uid","Date","now","displayName","split","emailVerified","setItem","stringify","signInWithEmailAndPassword","signOut","removeItem","Promise","resolve","updateProfile","profile","updatedUser"],"sources":["C:/Users/samet/Desktop/linkshortener/client/src/config/firebase.js"],"sourcesContent":["// Demo mode için Firebase'siz authentication\r\n// Gerçek uygulamada buraya gerçek Firebase config gelecek\r\n\r\n// Demo auth objesi\r\nexport const auth = {\r\n  currentUser: null,\r\n  onAuthStateChanged: (callback) => {\r\n    // Demo için localStorage'dan user'ı oku\r\n    const demoUser = localStorage.getItem('demoUser');\r\n    if (demoUser) {\r\n      const user = JSON.parse(demoUser);\r\n      setTimeout(() => callback(user), 100);\r\n    } else {\r\n      setTimeout(() => callback(null), 100);\r\n    }\r\n    return () => {}; // unsubscribe function\r\n  }\r\n};\r\n\r\n// Demo database objesi\r\nexport const db = {\r\n  // Demo için boş obje\r\n};\r\n\r\n// Demo functions\r\nexport const createUserWithEmailAndPassword = async (auth, email, password) => {\r\n  const user = {\r\n    uid: `demo-${Date.now()}`,\r\n    email,\r\n    displayName: email.split('@')[0],\r\n    emailVerified: true\r\n  };\r\n  localStorage.setItem('demoUser', JSON.stringify(user));\r\n  return { user };\r\n};\r\n\r\nexport const signInWithEmailAndPassword = async (auth, email, password) => {\r\n  const user = {\r\n    uid: `demo-${Date.now()}`,\r\n    email,\r\n    displayName: email.split('@')[0],\r\n    emailVerified: true\r\n  };\r\n  localStorage.setItem('demoUser', JSON.stringify(user));\r\n  return { user };\r\n};\r\n\r\nexport const signOut = async (auth) => {\r\n  localStorage.removeItem('demoUser');\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const updateProfile = async (user, profile) => {\r\n  const currentUser = JSON.parse(localStorage.getItem('demoUser') || '{}');\r\n  const updatedUser = { ...currentUser, ...profile };\r\n  localStorage.setItem('demoUser', JSON.stringify(updatedUser));\r\n  return Promise.resolve();\r\n};\r\n\r\nexport const onAuthStateChanged = auth.onAuthStateChanged;\r\n\r\nexport default null;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA,OAAO,MAAMA,IAAI,GAAG;EAClBC,WAAW,EAAE,IAAI;EACjBC,kBAAkB,EAAGC,QAAQ,IAAK;IAChC;IACA,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACjD,IAAIF,QAAQ,EAAE;MACZ,MAAMG,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACL,QAAQ,CAAC;MACjCM,UAAU,CAAC,MAAMP,QAAQ,CAACI,IAAI,CAAC,EAAE,GAAG,CAAC;IACvC,CAAC,MAAM;MACLG,UAAU,CAAC,MAAMP,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC;IACvC;IACA,OAAO,MAAM,CAAC,CAAC,CAAC,CAAC;EACnB;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,EAAE,GAAG;EAChB;AAAA,CACD;;AAED;AACA,OAAO,MAAMC,8BAA8B,GAAG,MAAAA,CAAOZ,IAAI,EAAEa,KAAK,EAAEC,QAAQ,KAAK;EAC7E,MAAMP,IAAI,GAAG;IACXQ,GAAG,EAAE,QAAQC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IACzBJ,KAAK;IACLK,WAAW,EAAEL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChCC,aAAa,EAAE;EACjB,CAAC;EACDf,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAEb,IAAI,CAACc,SAAS,CAACf,IAAI,CAAC,CAAC;EACtD,OAAO;IAAEA;EAAK,CAAC;AACjB,CAAC;AAED,OAAO,MAAMgB,0BAA0B,GAAG,MAAAA,CAAOvB,IAAI,EAAEa,KAAK,EAAEC,QAAQ,KAAK;EACzE,MAAMP,IAAI,GAAG;IACXQ,GAAG,EAAE,QAAQC,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;IACzBJ,KAAK;IACLK,WAAW,EAAEL,KAAK,CAACM,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAChCC,aAAa,EAAE;EACjB,CAAC;EACDf,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAEb,IAAI,CAACc,SAAS,CAACf,IAAI,CAAC,CAAC;EACtD,OAAO;IAAEA;EAAK,CAAC;AACjB,CAAC;AAED,OAAO,MAAMiB,OAAO,GAAG,MAAOxB,IAAI,IAAK;EACrCK,YAAY,CAACoB,UAAU,CAAC,UAAU,CAAC;EACnC,OAAOC,OAAO,CAACC,OAAO,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOrB,IAAI,EAAEsB,OAAO,KAAK;EACpD,MAAM5B,WAAW,GAAGO,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC;EACxE,MAAMwB,WAAW,GAAG;IAAE,GAAG7B,WAAW;IAAE,GAAG4B;EAAQ,CAAC;EAClDxB,YAAY,CAACgB,OAAO,CAAC,UAAU,EAAEb,IAAI,CAACc,SAAS,CAACQ,WAAW,CAAC,CAAC;EAC7D,OAAOJ,OAAO,CAACC,OAAO,CAAC,CAAC;AAC1B,CAAC;AAED,OAAO,MAAMzB,kBAAkB,GAAGF,IAAI,CAACE,kBAAkB;AAEzD,eAAe,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}